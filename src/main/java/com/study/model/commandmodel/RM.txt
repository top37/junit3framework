命令模式条件&理解：
1.实现（implements）；
2.调用者（invoker） - 传参（CommandImpl） - 调用call()；
3.具体命令（CommandImpl) - 需要绑定处理者（Handler|OtherHandler -> 可抽象|可具体）；
4.处理者（Handler|OtherHandler） - 真正的方法体；

在junit3中：
junit（实则是TestRunner）是 （invoker）；
实现了TestCase的类是（CommandImpl）；
junit传参（CommandImpl：我们自己编写的TestCaseImpl） - 调用call()；

效果：invoker只需要执行自己相应的call()即可，不必管其他实现。
junit： TestRunner -> doRun()